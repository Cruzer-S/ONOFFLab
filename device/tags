!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ASSIGN	ipc_manager.c	3;"	d	file:
BOAD_RATE	main.c	16;"	d	file:
CC	makefile	/^CC = gcc$/;"	m
DEBUGGER_H__	debugger.h	2;"	d
DEBUG_BUFFER	debugger.c	6;"	d	file:
DEBUG_DELAY	debugger.c	4;"	d	file:
DEVICE_ID	main.c	24;"	d	file:
DPRINT	debugger.h	19;"	d
DPRINT	debugger.h	22;"	d
DSHOW	debugger.h	18;"	d
DSHOW	debugger.h	21;"	d
FLAGS	makefile	/^FLAGS = -lwiringPi -std=c11$/;"	m
HEADER_SIZE	ipc_manager.h	20;"	d
INITIATE_TIMEOUT	main.c	128;"	d	file:
IPC_COMMAND	ipc_manager.h	/^enum IPC_COMMAND {$/;"	g
IPC_RECEIVED_CLIENT	ipc_manager.h	/^	IPC_RECEIVED_CLIENT = 0x02,$/;"	e	enum:IPC_COMMAND
IPC_REGISTER_DEVICE	ipc_manager.h	/^	IPC_REGISTER_DEVICE = 0x01,$/;"	e	enum:IPC_COMMAND
LINE_PER_BYTE	debugger.c	3;"	d	file:
OUTPUT	makefile	/^OUTPUT = output$/;"	m
PSK_SIZ	wifi_manager.h	5;"	d
SERIAL_DEVICE	main.c	17;"	d	file:
SERVER_DOMAIN	main.c	19;"	d	file:
SERVER_IPC_H__	ipc_manager.h	2;"	d
SERVER_PORT	main.c	20;"	d	file:
SERVER_SYNC_TIME	main.c	22;"	d	file:
SSID_SIZ	wifi_manager.h	4;"	d
WIFI_MANAGER_H__	wifi_manager.h	2;"	d
WPA_DIRECTORY	wifi_manager.c	3;"	d	file:
change_flag	ipc_manager.c	/^int change_flag(int fd, int flag)$/;"	f
change_sockopt	ipc_manager.c	/^int change_sockopt(int fd, int level, int flag, int value)$/;"	f
change_wifi	wifi_manager.c	/^extern bool change_wifi(const char *ssid, const char *psk)$/;"	f
connect_to_target	ipc_manager.c	/^int connect_to_target(const char *host, uint16_t port)$/;"	f
debug_serial	debugger.c	/^void debug_serial(int serial, bool inout)$/;"	f
error_handling	debugger.c	/^_Noreturn void error_handling(const char *fmt, ...)$/;"	f
ipc_receive_request	ipc_manager.c	/^int ipc_receive_request(int sock)$/;"	f
ipc_to_target	ipc_manager.c	/^int ipc_to_target(int sock, enum IPC_COMMAND cmd, ...)$/;"	f
is_initiate	main.c	/^bool is_initiate(int serial)$/;"	f
main	main.c	/^int main(int argc, char *argv[])$/;"	f
parse_data	main.c	/^int parse_data(int serial, char *ssid, char *psk)$/;"	f
readall	ipc_manager.c	/^int readall(int sock, char *buffer, int length)$/;"	f
receive_to_file	ipc_manager.c	/^int receive_to_file(int sock, FILE *fp, int length, int timeout)$/;"	f
refresh_wifi	wifi_manager.c	/^static bool refresh_wifi(void)$/;"	f	file:
